name: FIX EVERYTHING NOW

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  fix-now:
    name: Complete Server Fix
    runs-on: ubuntu-latest
    
    steps:
      - name: Fix Everything on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          timeout: 60m
          command_timeout: 60m
          script: |
            set +e  # Continue even if commands fail
            
            echo "🚀 STARTING COMPLETE FIX"
            echo "========================"
            
            # Step 1: Kill everything
            echo "Step 1: Killing all Node processes..."
            pkill -f node || true
            pkill -f npm || true
            pkill -f strapi || true
            fuser -k 3002/tcp 2>/dev/null || true
            fuser -k 1337/tcp 2>/dev/null || true
            sleep 3
            
            # Step 2: Go to project
            echo "Step 2: Going to project directory..."
            cd /var/www/pashland/data/www/g-shop.info || {
              echo "ERROR: Project directory not found!"
              exit 1
            }
            
            # Step 3: Update code
            echo "Step 3: Updating code..."
            git config --global --add safe.directory /var/www/pashland/data/www/g-shop.info
            git fetch --all
            git reset --hard origin/main
            git clean -fd
            git pull origin main
            
            # Step 4: Go to backend
            echo "Step 4: Entering backend directory..."
            cd backend || {
              echo "ERROR: Backend directory not found!"
              exit 1
            }
            
            # Step 5: Clean everything
            echo "Step 5: Cleaning old installations..."
            rm -rf node_modules
            rm -rf .cache
            rm -rf .tmp
            rm -rf build
            rm -f package-lock.json
            npm cache clean --force
            
            # Step 6: Install everything fresh
            echo "Step 6: Installing dependencies (this will take time)..."
            npm install --verbose
            
            # Step 7: Install Strapi explicitly
            echo "Step 7: Installing Strapi core..."
            npm install @strapi/strapi@4.25.13 --save
            npm install @strapi/plugin-users-permissions@4.25.13 --save
            npm install @strapi/plugin-i18n@4.25.13 --save
            npm install @strapi/plugin-cloud@4.25.13 --save
            
            # Step 8: Create proper .env
            echo "Step 8: Creating .env file..."
            cat > .env << 'ENVFILE'
            NODE_ENV=production
            HOST=0.0.0.0
            PORT=3002
            APP_KEYS=xlnVqFa+9zJH1234567890abcdef,qwertyuiopasdfghjklzxcvbnm
            API_TOKEN_SALT=9zJH1234567890abcdefghijklmn
            ADMIN_JWT_SECRET=xlnVqFa+9zJH1234567890abcdef
            JWT_SECRET=QWJjMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTI=
            DATABASE_CLIENT=sqlite
            DATABASE_FILENAME=.tmp/data.db
            ENVFILE
            
            # Step 9: Build Strapi
            echo "Step 9: Building Strapi..."
            NODE_ENV=production npm run build || {
              echo "Build failed, trying development mode..."
              npm run build || echo "Build completed with errors"
            }
            
            # Step 10: Start Strapi multiple ways
            echo "Step 10: Starting Strapi..."
            
            # Method 1: Direct npm start
            echo "Method 1: npm start..."
            nohup npm run start > /tmp/strapi1.log 2>&1 &
            NPM_PID=$!
            echo "Started npm with PID: $NPM_PID"
            
            # Wait and check
            sleep 10
            if curl -f http://localhost:3002/api/products 2>/dev/null; then
              echo "✅ SUCCESS: Strapi is running on port 3002!"
            else
              echo "Method 1 failed, trying method 2..."
              
              # Method 2: Direct node
              kill $NPM_PID 2>/dev/null || true
              NODE_ENV=production HOST=0.0.0.0 PORT=3002 nohup node /var/www/pashland/data/.nvm/versions/node/v18.20.8/bin/npm run start > /tmp/strapi2.log 2>&1 &
              NODE_PID=$!
              echo "Started node with PID: $NODE_PID"
              
              sleep 10
              if curl -f http://localhost:3002/api/products 2>/dev/null; then
                echo "✅ SUCCESS: Strapi is running on port 3002!"
              else
                echo "Method 2 failed, trying method 3..."
                
                # Method 3: npx strapi
                kill $NODE_PID 2>/dev/null || true
                NODE_ENV=production HOST=0.0.0.0 PORT=3002 nohup npx strapi start > /tmp/strapi3.log 2>&1 &
                NPX_PID=$!
                echo "Started npx with PID: $NPX_PID"
                
                sleep 10
                if curl -f http://localhost:3002/api/products 2>/dev/null; then
                  echo "✅ SUCCESS: Strapi is running on port 3002!"
                else
                  echo "Method 3 failed, trying PM2..."
                  
                  # Method 4: PM2
                  kill $NPX_PID 2>/dev/null || true
                  cd /var/www/pashland/data/www/g-shop.info
                  su - pashland -c "cd /var/www/pashland/data/www/g-shop.info/backend && NODE_ENV=production HOST=0.0.0.0 PORT=3002 /usr/lib/ispnodejs/bin/pm2 start npm --name strapi -- start"
                  
                  sleep 10
                  if curl -f http://localhost:3002/api/products 2>/dev/null; then
                    echo "✅ SUCCESS: Strapi is running with PM2!"
                  else
                    echo "❌ All methods failed!"
                  fi
                fi
              fi
            fi
            
            # Step 11: Final verification
            echo ""
            echo "Step 11: Final verification..."
            echo "================================"
            
            echo "Processes running:"
            ps aux | grep -E "(node|npm|strapi)" | grep -v grep
            
            echo ""
            echo "Ports listening:"
            netstat -tulpn | grep -E "(3002|1337)"
            
            echo ""
            echo "Testing endpoints:"
            curl -s -o /dev/null -w "Admin panel: %{http_code}\n" http://localhost:3002/admin
            curl -s -o /dev/null -w "API products: %{http_code}\n" http://localhost:3002/api/products
            curl -s -o /dev/null -w "API categories: %{http_code}\n" http://localhost:3002/api/categories
            
            echo ""
            echo "Checking logs:"
            tail -20 /tmp/strapi*.log 2>/dev/null | head -50
            
            echo ""
            echo "PM2 status:"
            su - pashland -c "/usr/lib/ispnodejs/bin/pm2 list"
            
            echo ""
            echo "================================"
            echo "🎯 FIX COMPLETE!"
            echo "Check https://g-shop.info"
            echo "================================"